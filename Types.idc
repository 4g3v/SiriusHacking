#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x40);
	set_inf_attr(INF_HIGH_OFF, 0xFF000000);
}

static Enums_0(id) {

	id = add_enum(-1,"TX",0x1100000);
	add_enum_member(id,"TX_DONT_START",	0,	-1);
	add_enum_member(id,"TX_INITIALIZE_IS_FINISHED",	0,	-1);
	add_enum_member(id,"TX_NO_INHERIT",	0,	-1);
	add_enum_member(id,"TX_READY",	0,	-1);
	add_enum_member(id,"TX_THREAD_ENTRY",	0,	-1);
	add_enum_member(id,"TX_NO_ACTIVATE",	0,	-1);
	add_enum_member(id,"TX_SUCCESS",	0,	-1);
	add_enum_member(id,"TX_AUTO_ACTIVATE",	0X1,	-1);
	add_enum_member(id,"TX_COMPLETED",	0X1,	-1);
	add_enum_member(id,"TX_THREAD_EXIT",	0X1,	-1);
	add_enum_member(id,"TX_TERMINATED",	0X2,	-1);
	add_enum_member(id,"TX_POOL_ERROR",	0X2,	-1);
	add_enum_member(id,"TX_SUSPENDED",	0X3,	-1);
	add_enum_member(id,"TX_PTR_ERROR",	0X3,	-1);
	add_enum_member(id,"TX_SLEEP",	0X4,	-1);
	add_enum_member(id,"TX_QUEUE_SUSP",	0X5,	-1);
	add_enum_member(id,"TX_SIZE_ERROR",	0X5,	-1);
	add_enum_member(id,"TX_SEMAPHORE_SUSP",	0X6,	-1);
	add_enum_member(id,"TX_EVENT_FLAG",	0X7,	-1);
	add_enum_member(id,"TX_BLOCK_MEMORY",	0X8,	-1);
	add_enum_member(id,"TX_BYTE_MEMORY",	0X9,	-1);
	add_enum_member(id,"TX_IO_DRIVER",	0XA,	-1);
	add_enum_member(id,"TX_FILE",	0XB,	-1);
	add_enum_member(id,"TX_TCP_IP",	0XC,	-1);
	add_enum_member(id,"TX_SEMAPHORE_ERROR",	0XC,	-1);
	add_enum_member(id,"TX_MUTEX_SUSP",	0XD,	-1);
	add_enum_member(id,"TX_NO_INSTANCE",	0XD,	-1);
	add_enum_member(id,"TX_PRIORITY_CHANGE",	0XE,	-1);
	add_enum_member(id,"TX_THREAD_ERROR",	0XE,	-1);
	add_enum_member(id,"TX_PRIORITY_ERROR",	0XF,	-1);
	add_enum_member(id,"TX_START_ERROR",	0X10,	-1);
	add_enum_member(id,"TX_CALLER_ERROR",	0X13,	-1);
	add_enum_member(id,"TX_TIMER_ERROR",	0X15,	-1);
	add_enum_member(id,"TX_TICK_ERROR",	0X16,	-1);
	add_enum_member(id,"TX_ACTIVATE_ERROR",	0X17,	-1);
	add_enum_member(id,"TX_THRESH_ERROR",	0X18,	-1);
	add_enum_member(id,"TX_MUTEX_ERROR",	0X1C,	-1);
	add_enum_member(id,"TX_INHERIT_ERROR",	0X1F,	-1);
	add_enum_member(id,"TX_STACK_FILL",	0XEF,	-1);
	add_enum_member(id,"TX_BYTE_POOL_ID",	0X42595445,	-1);
	add_enum_member(id,"TX_EVENT_FLAGS_ID",	0X4456444E,	-1);
	add_enum_member(id,"TX_MUTEX_ID",	0X4D555445,	-1);
	add_enum_member(id,"TX_SEMAPHORE_ID",	0X53454D41,	-1);
	add_enum_member(id,"TX_THREAD_ID",	0X54485244,	-1);
	add_enum_member(id,"TX_INITIALIZE_IN_PROGRESS",	0XF0F0F0F0,	-1);
	add_enum_member(id,"TX_INITIALIZE_ALMOST_DONE",	0XF0F0F0F1,	-1);
	add_enum_member(id,"TX_BYTE_BLOCK_FREE",	0XFFFFEEEE,	-1);
	add_enum_member(id,"TX_WAIT_FOREVER",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"ImportExportType",0x1100000);
	add_enum_member(id,"DIRECT",	0,	-1);
	add_enum_member(id,"VTABLE",	0X1,	-1);
	id = add_enum(-1,"IP_PROTO",0x1100000);
	add_enum_member(id,"IP_PROTOIP",	0,	-1);
	add_enum_member(id,"IP_PROTOICMP",	0X1,	-1);
	add_enum_member(id,"IP_PROTOIGMP",	0X2,	-1);
	add_enum_member(id,"IP_PROTOIPV4",	0X4,	-1);
	add_enum_member(id,"IP_PROTOTCP",	0X6,	-1);
	add_enum_member(id,"IP_PROTOUDP",	0X11,	-1);
	add_enum_member(id,"IPPROTO_IPV6",	0X29,	-1);
	add_enum_member(id,"IPPROTO_ROUTING",	0X2B,	-1);
	add_enum_member(id,"IPPROTO_FRAGMENT",	0X2C,	-1);
	add_enum_member(id,"IP_PROTORDP",	0X2E,	-1);
	add_enum_member(id,"IPPROTO_ESP",	0X32,	-1);
	add_enum_member(id,"IPPROTO_AH",	0X33,	-1);
	add_enum_member(id,"IPPROTO_ICMPV6",	0X3A,	-1);
	add_enum_member(id,"IPPROTO_NONE",	0X3B,	-1);
	add_enum_member(id,"IPPROTO_DSTOPTS",	0X3C,	-1);
	add_enum_member(id,"IP_PROTOOSPF",	0X59,	-1);
	add_enum_member(id,"IP_PROTOTPACKET",	0X7F,	-1);
	id = add_enum(-1,"SOCK_TYPE",0x1100000);
	add_enum_member(id,"SOCK_STREAM",	0X1,	-1);
	add_enum_member(id,"SOCK_DGRAM",	0X2,	-1);
	add_enum_member(id,"SOCK_RAW",	0X3,	-1);
	add_enum_member(id,"SOCK_RDM",	0X4,	-1);
	add_enum_member(id,"SOCK_SEQPACKET",	0X5,	-1);
	id = add_enum(-1,"FAMILY",0x1100000);
	add_enum_member(id,"AF_UNSPEC",	0,	-1);
	add_enum_member(id,"AF_INET",	0X2,	-1);
	add_enum_member(id,"AF_INET6",	0X1C,	-1);
	id = add_enum(-1,"ModuleType",0x1100000);
	add_enum_member(id,"Library",	0,	-1);
	add_enum_member(id,"Component",	0X1,	-1);
	add_enum_member(id,"Hybrid",	0X2,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("CGDStruct");
	id = get_struc_id("FileDescriptor");
	id = get_struc_id("BitmapFileHeader");
	id = get_struc_id("BitmapInfoHeader");
	id = get_struc_id("UartDriverStruct");
	id = get_struc_id("uart_Definition");
	SetType(get_member_id(id, 0x8), "const char *");
	id = get_struc_id("UartDataStruct");
	SetType(get_member_id(id, 0x1C), "_WORD *");
	id = get_struc_id("HWUartStruct");
	id = get_struc_id("DriverFunctions");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x14), "void *");
	SetType(get_member_id(id, 0x18), "void *");
	SetType(get_member_id(id, 0x1C), "void *");
	SetType(get_member_id(id, 0x20), "void *");
	SetType(get_member_id(id, 0x24), "void *");
	SetType(get_member_id(id, 0x28), "void *");
	SetType(get_member_id(id, 0x2C), "void *");
	SetType(get_member_id(id, 0x30), "void *");
	SetType(get_member_id(id, 0x34), "void *");
	SetType(get_member_id(id, 0x38), "void *");
	SetType(get_member_id(id, 0x3C), "void *");
	SetType(get_member_id(id, 0x40), "void *");
	SetType(get_member_id(id, 0x44), "void *");
	SetType(get_member_id(id, 0x48), "void *");
	SetType(get_member_id(id, 0x4C), "void *");
	SetType(get_member_id(id, 0x50), "void *");
	SetType(get_member_id(id, 0x54), "void *");
	SetType(get_member_id(id, 0x58), "void *");
	SetType(get_member_id(id, 0x5C), "void *");
	SetType(get_member_id(id, 0x60), "void *");
	id = get_struc_id("fs_Driver");
	SetType(get_member_id(id, 0x0), "DriverFunctions *");
	SetType(get_member_id(id, 0x4), "const char *");
	SetType(get_member_id(id, 0x10), "MutexWrapper *");
	id = get_struc_id("sockaddr_in");
	id = get_struc_id("RTCData");
	id = get_struc_id("MPUSetupStruct");
	id = get_struc_id("TX_TIMER");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "TX_TIMER_INTERNAL");
	SetType(get_member_id(id, 0x24), "TX_TIMER *");
	SetType(get_member_id(id, 0x28), "TX_TIMER *");
	id = get_struc_id("ggw_Connection");
	SetType(get_member_id(id, 0x78), "char *");
	id = get_struc_id("TX_SEMAPHORE");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0xC), "TX_THREAD *");
	SetType(get_member_id(id, 0x14), "TX_SEMAPHORE *");
	SetType(get_member_id(id, 0x18), "TX_SEMAPHORE *");
	id = get_struc_id("TX_MUTEX");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0xC), "TX_THREAD *");
	SetType(get_member_id(id, 0x18), "TX_THREAD *");
	SetType(get_member_id(id, 0x20), "TX_MUTEX *");
	SetType(get_member_id(id, 0x24), "TX_MUTEX *");
	SetType(get_member_id(id, 0x2C), "TX_MUTEX *");
	SetType(get_member_id(id, 0x30), "TX_MUTEX *");
	id = get_struc_id("MutexFunctions");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	id = get_struc_id("MutexWrapper");
	SetType(get_member_id(id, 0x0), "MutexFunctions *");
	SetType(get_member_id(id, 0x4), "TX_MUTEX *");
	id = get_struc_id("SemaphoreWrapper");
	SetType(get_member_id(id, 0x0), "TX_SEMAPHORE");
	SetType(get_member_id(id, 0x20), "TX_SEMAPHORE");
	id = get_struc_id("conn_mgr_data");
	id = get_struc_id("Module");
	SetType(get_member_id(id, 0x4), "Task *");
	SetType(get_member_id(id, 0xC), "Export *");
	SetType(get_member_id(id, 0x14), "Import *");
	SetType(get_member_id(id, 0x1C), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x20), "ModuleType");
	SetType(get_member_id(id, 0x24), "const char *");
	SetType(get_member_id(id, 0x28), "SomeModEntry3 *");
	SetType(get_member_id(id, 0x30), "SomeModEntry3 *");
	SetType(get_member_id(id, 0x38), "EventExport *");
	SetType(get_member_id(id, 0x40), "EventImport *");
	id = get_struc_id("EventImport");
	id = get_struc_id("EventExport");
	id = get_struc_id("SomeStruct");
	SetType(get_member_id(id, 0x8), "FuncTable **");
	SetType(get_member_id(id, 0x10), "Info");
	id = get_struc_id("Info");
	SetType(get_member_id(id, 0x0), "ModuleType");
	id = get_struc_id("FuncTable");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(FuncTable **funcTable)");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(FuncTable **funcTable, void *mutexFunc, __int16 CID)");
	SetType(get_member_id(id, 0x8), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0xC), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x10), "void *(__cdecl *)(FuncTable **funcTable, int providedEnum)");
	SetType(get_member_id(id, 0x14), "void (__cdecl *)(FuncTable **funcTable, int enum_, void *value)");
	SetType(get_member_id(id, 0x18), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x1C), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x20), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x24), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x28), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x2C), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x30), "void (__cdecl *)()");
	SetType(get_member_id(id, 0x34), "void *(__cdecl *)()");
	SetType(get_member_id(id, 0x38), "void (__cdecl *)(FuncTable **funcTable, void *mutexFunc, __int16 CID)");
	SetType(get_member_id(id, 0x3C), "void *(__cdecl *)()");
	id = get_struc_id("TaskPriority");
	id = get_struc_id("UnknownUShorts");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	id = get_struc_id("UnknownStruct");
	id = get_struc_id("SomeModEntry3");
	id = get_struc_id("Export");
	SetType(get_member_id(id, 0xC), "ImportExportType");
	id = get_struc_id("Import");
	SetType(get_member_id(id, 0xC), "ImportExportType");
	id = get_struc_id("InternalImport");
	SetType(get_member_id(id, 0x14), "ImportExportType");
	id = get_struc_id("InternalExport");
	id = get_struc_id("FindLoopArguments");
	SetType(get_member_id(id, 0x0), "InternalImport *");
	SetType(get_member_id(id, 0x8), "SomeStruct *");
	id = get_struc_id("Task");
	SetType(get_member_id(id, 0x4), "const char *");
	SetType(get_member_id(id, 0xC), "void *(__cdecl *)()");
	id = get_struc_id("TX_TIMER_INTERNAL");
	SetType(get_member_id(id, 0x10), "TX_TIMER_INTERNAL *");
	SetType(get_member_id(id, 0x14), "TX_TIMER_INTERNAL *");
	SetType(get_member_id(id, 0x18), "TX_TIMER_INTERNAL **");
	id = get_struc_id("TX_THREAD");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x20), "TX_THREAD *");
	SetType(get_member_id(id, 0x24), "TX_THREAD *");
	SetType(get_member_id(id, 0x34), "char *");
	SetType(get_member_id(id, 0x3C), "TX");
	SetType(get_member_id(id, 0x64), "TX_THREAD *");
	SetType(get_member_id(id, 0x68), "TX_THREAD *");
	SetType(get_member_id(id, 0x70), "void *");
	id = get_struc_id("HTTPStatusCode");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "const char *");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"CGDStruct",0);
	id = add_struc(-1,"FileDescriptor",0);
	id = add_struc(-1,"BitmapFileHeader",0);
	id = add_struc(-1,"BitmapInfoHeader",0);
	id = add_struc(-1,"UartDriverStruct",0);
	id = add_struc(-1,"uart_Definition",0);
	id = add_struc(-1,"UartDataStruct",0);
	id = add_struc(-1,"HWUartStruct",0);
	id = add_struc(-1,"DriverFunctions",0);
	id = add_struc(-1,"fs_Driver",0);
	id = add_struc(-1,"sockaddr_in",0);
	id = add_struc(-1,"RTCData",0);
	id = add_struc(-1,"MPUSetupStruct",0);
	id = add_struc(-1,"TX_TIMER",0);
	id = add_struc(-1,"ggw_Connection",0);
	id = add_struc(-1,"TX_SEMAPHORE",0);
	id = add_struc(-1,"TX_MUTEX",0);
	id = add_struc(-1,"MutexFunctions",0);
	id = add_struc(-1,"MutexWrapper",0);
	id = add_struc(-1,"SemaphoreWrapper",0);
	id = add_struc(-1,"conn_mgr_data",0);
	id = add_struc(-1,"Module",0);
	id = add_struc(-1,"EventImport",0);
	id = add_struc(-1,"EventExport",0);
	id = add_struc(-1,"SomeStruct",0);
	id = add_struc(-1,"Info",0);
	id = add_struc(-1,"FuncTable",0);
	id = add_struc(-1,"TaskPriority",0);
	id = add_struc(-1,"UnknownUShorts",0);
	id = add_struc(-1,"UnknownStruct",0);
	id = add_struc(-1,"SomeModEntry3",0);
	id = add_struc(-1,"Export",0);
	id = add_struc(-1,"Import",0);
	id = add_struc(-1,"InternalImport",0);
	id = add_struc(-1,"InternalExport",0);
	id = add_struc(-1,"FindLoopArguments",0);
	id = add_struc(-1,"Task",0);
	id = add_struc(-1,"TX_TIMER_INTERNAL",0);
	id = add_struc(-1,"TX_THREAD",0);
	id = add_struc(-1,"HTTPStatusCode",0);
	
	id = get_struc_id("CGDStruct");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Width",	0X26,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Height",	0X28,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2A",	0X2A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	
	id = get_struc_id("FileDescriptor");
	mid = add_struc_member(id,"fd",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	
	id = get_struc_id("BitmapFileHeader");
	mid = add_struc_member(id,"Magic",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Size",	0X2,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Reserved1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Reserved2",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"OffBits",	0XA,	0x20000400,	-1,	4);
	
	id = get_struc_id("BitmapInfoHeader");
	mid = add_struc_member(id,"Size",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Width",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Planes",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"BitCount",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Compression",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SizeImage",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XPelsPerMeter",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YpelsPerMeter",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ClrUsed",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ClrImportant",	0X24,	0x20000400,	-1,	4);
	
	id = get_struc_id("UartDriverStruct");
	mid = add_struc_member(id,"DriverStructIndex",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Flags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DefinitionIndex",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"State",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_F",	0XF,	0x000400,	-1,	1);
	
	id = get_struc_id("uart_Definition");
	mid = add_struc_member(id,"Index",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Path",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Driver",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Created",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"SupportsEscapeSequences",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_12",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_13",	0X13,	0x000400,	-1,	1);
	
	id = get_struc_id("UartDataStruct");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TotalRead",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"UartBase",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"WriteBuffer",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBuffer",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBufferStart",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBufferPos",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBufferLeft",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBufferSize",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteBufferStart",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteBufferPos",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteBufferLeft",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteBufferSize",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	
	id = get_struc_id("HWUartStruct");
	mid = add_struc_member(id,"baud",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadBufferSize",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WriteBufferSize",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	
	id = get_struc_id("DriverFunctions");
	mid = add_struc_member(id,"OpenDir",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OpenFile",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OpenClose",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Read",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Write",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_18",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Close",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_20",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Stat",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_28",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_30",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_34",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_38",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_40",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_44",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_48",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_50",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_54",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_58",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_60",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("fs_Driver");
	mid = add_struc_member(id,"DriverFunctions",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Path",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Flags",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OpenFDs",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MutexWrapper",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"State",	0X14,	0x20000400,	-1,	4);
	
	id = get_struc_id("sockaddr_in");
	mid = add_struc_member(id,"sin_len",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sin_family",	0X1,	0x8800400,	get_enum("FAMILY"),	1);
	mid = add_struc_member(id,"sin_port",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sin_addr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sin_zero",	0X8,	0x000400,	-1,	16);
	
	id = get_struc_id("RTCData");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Year",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Month",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Day",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_6",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Hours",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Minutes",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Seconds",	0X9,	0x000400,	-1,	1);
	
	id = get_struc_id("MPUSetupStruct");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("TX_TIMER_INTERNAL");
	mid = add_struc_member(id,"tx_timer_internal_remaining_ticks",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_timer_internal_re_initialize_ticks",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_timer_internal_timeout_function",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_timer_internal_timeout_param",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_timer_internal_active_next",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_timer_internal_active_previous",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_timer_internal_list_head",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("TX_TIMER");
	mid = add_struc_member(id,"tx_timer_id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_timer_name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_timer_internal",	0X8,	0x60000400,	get_struc_id("TX_TIMER_INTERNAL"),	28);
	mid = add_struc_member(id,"tx_timer_created_next",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_timer_created_previous",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("ggw_Connection");
	mid = add_struc_member(id,"IsConnected",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_38",	0X38,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_39",	0X39,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3A",	0X3A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3B",	0X3B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Semaphore",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Index",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Timeout",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TimeSinceLastCommand",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"serviceID",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50_str",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_54",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_5C",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_60",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_64",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_68",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_6C",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_70",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_74",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Command",	0X78,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7D",	0X7D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7E",	0X7E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_7F",	0X7F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_98",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_BC",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C0",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C4",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C8",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_CC",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D0",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D4",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_D8",	0XD8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_DC",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ChannelOpen",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DataMode",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_E8",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_EC",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F0",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F4",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_F8",	0XF8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_FC",	0XFC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_100",	0X100,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_104",	0X104,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_108",	0X108,	0x20000400,	-1,	4);
	
	id = get_struc_id("TX_MUTEX");
	mid = add_struc_member(id,"tx_mutex_id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_ownership_count",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_owner",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_inherit",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_original_priority",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_suspension_list",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_suspended_count",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_created_next",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_created_previous",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_highest_priority_waiting",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_mutex_owned_next",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_mutex_owned_previous",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_34",	0X34,	0x20000400,	-1,	4);
	
	id = get_struc_id("MutexFunctions");
	mid = add_struc_member(id,"Get",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Put",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Delete",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_C",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("MutexWrapper");
	mid = add_struc_member(id,"Functions",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Mutex",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("TX_SEMAPHORE");
	mid = add_struc_member(id,"tx_semaphore_id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_semaphore_name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_semaphore_count",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_semaphore_suspension_list",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_semaphore_suspended_count",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_semaphore_created_next",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_semaphore_created_previous",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x20000400,	-1,	4);
	
	id = get_struc_id("SemaphoreWrapper");
	mid = add_struc_member(id,"Semaphore_1",	0,	0x60000400,	get_struc_id("TX_SEMAPHORE"),	32);
	mid = add_struc_member(id,"Semaphore_2",	0X20,	0x60000400,	get_struc_id("TX_SEMAPHORE"),	32);
	mid = add_struc_member(id,"field_40",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_44",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AllocatedMemory",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4C",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_50",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Semaphore_2_InitialCount",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_58",	0X58,	0x20000400,	-1,	4);
	
	id = get_struc_id("conn_mgr_data");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("Module");
	mid = add_struc_member(id,"ID",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Tasks",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TaskCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Exports",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExportsCount",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Imports",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ImportsCount",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GetFunctionTable",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Type",	0X20,	0x28800400,	get_enum("ModuleType"),	4);
	mid = add_struc_member(id,"Name",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnknownList1",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnknownList1Count",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"UnknownList2",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"UnknownList2Count",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EventExports",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EventExportsCount",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EventImports",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EventImportsCount",	0X44,	0x20000400,	-1,	4);
	
	id = get_struc_id("EventImport");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Requires",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("EventExport");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Produces",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("Info");
	mid = add_struc_member(id,"Type",	0,	0x28800400,	get_enum("ModuleType"),	4);
	mid = add_struc_member(id,"initMem",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"taskMem",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"startMem",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"initTime",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"startTime",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"startCompleteTime",	0X18,	0x20000400,	-1,	4);
	
	id = get_struc_id("SomeStruct");
	mid = add_struc_member(id,"CID",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ModuleTaskCount",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FuncTablePtr",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Rank",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Info",	0X10,	0x60000400,	get_struc_id("Info"),	28);
	
	id = get_struc_id("FuncTable");
	mid = add_struc_member(id,"Init",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Start",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_1",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_2",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"GetExport",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetImport",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_3",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_4",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_5",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StartComplete",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_6",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_7",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StartComplete2",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_8",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"early_start",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Unknown_9",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("TaskPriority");
	mid = add_struc_member(id,"TID",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Priority",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("UnknownUShorts");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_2",	0X2,	0x10000400,	-1,	2);
	
	id = get_struc_id("UnknownStruct");
	mid = add_struc_member(id,"FuncTablePtr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x20000400,	-1,	4);
	
	id = get_struc_id("SomeModEntry3");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("Export");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ModuleID",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_6",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"IID",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Type",	0XC,	0x28800400,	get_enum("ImportExportType"),	4);
	mid = add_struc_member(id,"Enum",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	
	id = get_struc_id("Import");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ModuleID",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_6",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"IID",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Type",	0XC,	0x28800400,	get_enum("ImportExportType"),	4);
	mid = add_struc_member(id,"Enum",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	
	id = get_struc_id("InternalImport");
	mid = add_struc_member(id,"RequestingModuleIndex",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ProvidingModuleIndex",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"IID",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Enum",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PCID",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"providedEnum",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Type",	0X14,	0x28800400,	get_enum("ImportExportType"),	4);
	
	id = get_struc_id("InternalExport");
	mid = add_struc_member(id,"field_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ModuleIndex",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ExportIndex",	0X4,	0x10000400,	-1,	2);
	
	id = get_struc_id("FindLoopArguments");
	mid = add_struc_member(id,"ImportsList",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TotalImportsCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sm_module_44_2C_structs",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ModuleCount",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_14",	0X14,	0x20000400,	-1,	4);
	
	id = get_struc_id("Task");
	mid = add_struc_member(id,"TID",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TaskName",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StackSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Entry",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("TX_THREAD");
	mid = add_struc_member(id,"tx_thread_id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_run_count",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_stack_ptr",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_stack_start",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_stack_end",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_stack_size",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_time_slice",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_new_time_slice",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_ready_next",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_ready_previous",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_28",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_2C",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_30",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_name",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_priority",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_state",	0X3C,	0x28800400,	get_enum("TX"),	4);
	mid = add_struc_member(id,"tx_thread_delayed_suspend",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_suspending",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_preempt_threshold",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_schedule_hook",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_entry",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_entry_parameter",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_timer",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_suspend_cleanup",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_suspend_control_block",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_suspended_next",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_suspended_previous",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_suspend_info",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_additional_suspend_info",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tx_thread_suspend_option",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_suspend_status",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_80",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_84",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_88",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8C",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_90",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_94",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_98",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_9C",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A4",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_A8",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_AC",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B0",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B4",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_B8",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maybe_tx_thread_filex_ptr",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_user_priority",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_user_preempt_threshold",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_inherit_priority",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_owned_mutex_count",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_owned_mutex_list",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tx_thread_entry_exit_notify",	0XD4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("HTTPStatusCode");
	mid = add_struc_member(id,"Code",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Meaning",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
